#!/usr/bin/env bash

set -Eeuo pipefail

cd "$(dirname "$(readlink -f "$BASH_SOURCE")")"

#
# Globals
#

commands=()
switches=()

#
# Environment
#

export GEOSUPPORT_FULL_VERSION="@geosupport_fullversion@"
export GEOSUPPORT_BASEDIR="${GEOSUPPORT_BASEDIR:-@geosupport_basedir@}"
export GEOSUPPORT_HOME="${GEOSUPPORT_HOME:-${GEOSUPPORT_BASEDIR}/current}"
export GEOFILES="${GEOFILES:-${GEOSUPPORT_HOME}/fls/}"
export GS_LIBRARY_PATH="${GS_LIBRARY_PATH:-${GEOSUPPORT_HOME}/lib}"
export GS_INCLUDE_PATH="${GS_INCLUDE_PATH:-${GEOSUPPORT_HOME}/include}"

#
# Functions
#

die() {
    echo "$*" 1>&2
    exit 1
}

_install_files() {
    local cdir="$(pwd)"
    mkdir -p ${GEOSUPPORT_BASEDIR} \
        && cd ${GEOSUPPORT_BASEDIR} \
        && tar xzvf ${GEOSUPPORT_DISTFILE} \
        && ln -s ${GEOSUPPORT_FULL_VERSION} ${GEOSUPPORT_HOME}
    cd "${cdir}"
}

#
# Configures how the Geosupport shared library files are located by ld
# at runtime using the 'switches' global variable.
#
_configure_so_path() {
    local ldconfig=
    local ldlibpath=
    for s in ${switches}; do
        case "${s}" in
            ldconfig)
                ldconfig="true"
                ;;
            ldlibpath)
                ldlibpath="true"
                ;;
            *)
                continue
                ;;
        esac
    done
    if [ -n "${ldconfig}" ]; then
        # Add GS_LIBRARY_PATH to the system runtime shared library path using ldconfig.
        # This usually requires superuser (root) privileges.
        echo "${GS_LIBRARY_PATH}" > /etc/ld.so.conf.d/geosupport.conf
        ldconfig
        #echo "Result of \$GS_LIBRARY_PATH > /etc/ld.so.conf.d/geosupport.conf after calling ldconfig:"
        #echo "$(ldconfig -p | grep -i ${GS_LIBRARY_PATH})"
    else
        # Add GS_LIBRARY_PATH to the LD_LIBRARY_PATH
        if [ -n "${ldlibpath}" ]; then
            [[ "$LD_LIBRARY_PATH" =~ "${GS_LIBRARY_PATH}" ]] || \
                export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}${GS_LIBRARY_PATH}
            #echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}"
        fi # End ldlibpath
    fi # End ldconfig
}

#
# Adds $GEOSUPPORT/bin to the PATH if it's not already there.
#
# TODO Make persistent?
#      echo "${GEOSUPPORT_HOME}/bin" >> $HOME/.profile
#        or
#      echo "${GEOSUPPORT_HOME}/bin" > /etc/profile.d/geosupport.sh
#
_configure_path() {
    [[ "$PATH" =~ "${GEOSUPPORT_HOME}/bin" ]] || \
        export PATH="${GEOSUPPORT_HOME}/bin:${PATH}"
}

#
# By default, Geosupport libs are visible to the dynamic linker by setting
# the LD_LIBRARY_PATH environment variable.
#
# If the environment contains a variable named GEOSUPPORT_LDCONFIG whose
# value is not null or an empty string, ldconfig is used instead.
# However, the call to ldconfig must be run as root.
#
install() {
    _install_files
    _configure_so_path
    _configure_path
}

usage() {
    local this_file
    this_file="$(basename "${BASH_SOURCE[0]}")"
cat <<- EOF

Usage: ${this_file} [COMMAND [OPTIONS]]

Run, install or show information about Geosupport

Commands:
  environment   Print Geosupport environment variable names and current values.

  goat          Run a simple client for using Geosupport interactively from
                the command line. Fails if Geosupport has not been installed.

  help          Show this usage message and exit.

  install       Install Geosupport binaries, libraries and data.

                Options:

                  --ldconfig    Permanently adds GS_LIBRARY_PATH to the
                                runtime shared library path.

                                NOTE: Use of this option causes '--ldlibpath'
                                to be ignored if it also appears on the
                                command line.

                                NOTE: Requires root privileges

                  --ldlibpath   Adds GS_LIBRARY_PATH to the LD_LIBRARY_PATH
                                variable.

                                NOTE: This option will be ignored if
                                '--ldconfig' also appears on the command line.

  version       Print Geosupport release and version information.

EOF
}

_env() {
cat <<- EOF

Geosupport Environment Variables
--------------------------------

GEOSUPPORT_BASEDIR=${GEOSUPPORT_BASEDIR}
   GEOSUPPORT_HOME=${GEOSUPPORT_HOME}
          GEOFILES=${GEOFILES}
   GS_LIBRARY_PATH=${GS_LIBRARY_PATH}
   GS_INCLUDE_PATH=${GS_INCLUDE_PATH}

EOF
}

_version() {
cat <<- EOF

Geosupport @geosupport_fullversion@
-----------------------------------

     Release: @geosupport_release@
       Patch: @geosupport_patch@
       Major: @geosupport_major@
       Minor: @geosupport_minor@

        Arch: x86_64, amd64
        Name: Geosupport for Linux

Geosupport is written and maintained by the NYC Department of City Planning.
https://www1.nyc.gov/site/planning/data-maps/open-data.page#geocoding_application

This Geosupport distribution was generated using the geosupport-docker project
by Matthew Lipper.
https://github.com/mlipper/geosupport-docker
https://hub.docker.com/r/mlipper/geosupport-docker


EOF
}


main() {

    [ $# -eq 0 ] && usage

    while [ $# -gt 0 ]; do
        case "$1" in
            -e | environment)
                commands+=( "environment" ); shift
                ;;
            -h | help)
                commands+=( "help" ); shift
                ;;
            -i | install)
                commands+=( "install" ); shift
                ;;
            -v | version)
                commands+=( "version" ); shift
                ;;
            --*)
                switches+=( "$1" ); shift
                ;;
            *)
                die "Invalid argument: $1"; shift
                ;;
        esac
    done

    for cmd in "${commands[@]}"; do
        case "${cmd}" in
            environment)
                _env ;;
            goat)
                echo "goat" ;;
            help)
                usage ;;
            install)
                echo "install" ;;
            version)
                _version ;;
            *)
                die "Unknown command "${cmd}"" ;;
        esac
    done
} # End main

main "$@"
